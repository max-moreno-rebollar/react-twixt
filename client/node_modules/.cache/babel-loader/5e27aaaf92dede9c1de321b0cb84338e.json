{"ast":null,"code":"var _jsxFileName = \"/home/maxmoreno/Projects/twixt-remake/src/Board.js\";\nimport React, { useState, useEffect } from 'react';\nimport Box from './Box';\nimport Connection from './Connection';\n\nfunction Board(props) {\n  const [boardState, setBoardState] = useState([]);\n  const [lineState, setLineState] = useState([]);\n  const [currLineState, setCurrLineState] = useState(0);\n\n  function handleBoxClick(box) {\n    const slicedBoardState = boardState.slice();\n    slicedBoardState.push({\n      startPoint: box.cx,\n      endPoint: box.cy\n    });\n    setBoardState(slicedBoardState);\n    setCurrLineState(currLineState + 1);\n  }\n\n  function resetState() {\n    console.log(\"here\");\n\n    if (currLineState === 2) {\n      const slicedLineState = lineState.slice();\n      slicedLineState.push({\n        x1: boardState[boardState.length - 2].startPoint,\n        y1: boardState[boardState.length - 2].endPoint,\n        x2: boardState[boardState.length - 1].startPoint,\n        y2: boardState[boardState.length - 1].endPoint\n      });\n      setLineState(slicedLineState);\n      setCurrLineState(0);\n      setBoardState([]);\n    }\n  }\n\n  useEffect(resetState);\n  const arr = [];\n\n  for (let row = 0; row < 24; row++) {\n    for (let col = 0; col < 24; col++) {\n      const index = row * 24 + col;\n      arr[index] = {\n        id: index,\n        cx: 17.5 + col * 35,\n        cy: 17.5 + row * 35\n      };\n    }\n  }\n\n  const boxes = arr.map(box => {\n    return /*#__PURE__*/React.createElement(Box, {\n      key: box.id,\n      cx: box.cx,\n      cy: box.cy,\n      onClick: () => handleBoxClick(box),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    });\n  });\n  const connections = lineState.map((line, index) => {\n    return /*#__PURE__*/React.createElement(Connection, {\n      key: index,\n      x1: line.x1,\n      y1: line.y1,\n      x2: line.x2,\n      y2: line.y2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    height: \"800\",\n    width: \"800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, connections, boxes);\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/maxmoreno/Projects/twixt-remake/src/Board.js"],"names":["React","useState","useEffect","Box","Connection","Board","props","boardState","setBoardState","lineState","setLineState","currLineState","setCurrLineState","handleBoxClick","box","slicedBoardState","slice","push","startPoint","cx","endPoint","cy","resetState","console","log","slicedLineState","x1","length","y1","x2","y2","arr","row","col","index","id","boxes","map","connections","line"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Box from './Box';\nimport Connection from './Connection';\n\nfunction Board(props) {\n    const [boardState, setBoardState] = useState([]);\n    const [lineState, setLineState] = useState([]);\n    const [currLineState, setCurrLineState] = useState(0);\n    \n    function handleBoxClick(box) {\n        const slicedBoardState = boardState.slice();\n        slicedBoardState.push({startPoint: box.cx, endPoint: box.cy});\n        setBoardState(slicedBoardState);\n        setCurrLineState(currLineState + 1);\n    }\n\n    function resetState() {\n        console.log(\"here\");\n        if(currLineState === 2){\n            const slicedLineState = lineState.slice();\n            slicedLineState.push({x1: boardState[boardState.length - 2].startPoint, y1: boardState[boardState.length - 2].endPoint,\n                x2: boardState[boardState.length - 1].startPoint, y2:boardState[boardState.length - 1].endPoint});\n            setLineState(slicedLineState);\n            setCurrLineState(0);\n            setBoardState([]);\n        }\n    }\n\n    useEffect(resetState);\n\n    const arr = [];\n    for(let row = 0; row < 24; row++) {\n        for(let col = 0; col < 24; col++) {\n            const index = row * 24 + col;\n            arr[index] = {id: index, cx: 17.5 + col * 35, cy: 17.5 + row * 35};\n        }\n    }\n\n    const boxes = arr.map((box) => {\n        return(\n            <Box key = {box.id} cx = {box.cx} cy = {box.cy} onClick = {() => handleBoxClick(box)}/>\n        )\n    })\n\n    const connections = lineState.map((line, index) => {\n        return(\n            <Connection key = {index} x1 = {line.x1} y1 = {line.y1} x2 = {line.x2} y2 = {line.y2}/>\n        )\n    })\n\n    return (\n        <svg height = \"800\" width = \"800\">\n            { connections }\n            { boxes }\n        </svg>\n    )\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}